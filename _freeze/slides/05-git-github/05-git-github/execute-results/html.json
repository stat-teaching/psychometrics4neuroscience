{
  "hash": "d5be47f83c36f5d07d754e99250c071e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Git and Github\n---\n\n\n\n\n# Git and Github {.section}\n\n## Git and Github\n\n- The basic idea is to track changes within a folder, assign a `message` and eventually a `tag` to a specific version obtaining a version hystory. The version history is completely navigable, you can go back to a previous version of the code.\n- The are advanced features like `branches` for creating an independent version of the project to test new features and then `merge` into the main streamline.\n- The entire (local) Git project can be hosted on Github to improve collaboration. Other people or collaborators can `clone` the repository and `push` their changes to the project.\n\n# Veeeery basic Git workflow {.section}\n\n## Veeeery basic Git workflow\n\nAfter installing Git, you can start a new repository opening a terminal on a folder and typing `git init`. The folder is now a git project you can notice by the hidden `.git` folder.\n\n```bash\ncd ~/some/folder\ngit init\n```\n\nThen you can `add` files to the staging area. Basically these files are ready to be `committed` i.e. \"written\" in the Git history.\n\n```bash\ngit add file1.txt\n# git add . # add everyting\n```\n\nFinally you can commit the modified version of the file using `git commit -m message`\n\n```bash\ngit commit -m \"my first amazing commit\"\n```\n\nyou can see the Git hystory with all your commits:\n\n```bash\ngit log\n```\n\n## Github\n\nImagine to put everyting into a server with nice viewing options and advanced features. Github is just an hosting service for your `git` folder.\n\nYou can create an empty repository on Github named `git-test`. Now my repo has the path `git@github.com:filippogambarota/git-test.git`.\n\n```bash\ngit remote add origin git@github.com:filippogambarota/git-test.git\ngit push\n```\n\nNow our local repository is linked with the remote repository. Every time we do `git push` our local commits will be uploaded.\n\nIf you worked on the repository from another machine or a colleague add some changes, you can do `git pull` and your local machine will be updated.\n\n</br>\n\nThe repository `git-test` is online and can be seen here [filippogambarota/git-test](https://github.com/filippogambarota/git-test).\n\n## Github\n\nAn now let's see on Github the result:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/git-test.png){fig-align='center' width=604}\n:::\n:::\n\n\n\n\n## More about Git and Github\n\nThere are a lot of resources online:\n\n- The Open Science Manual - Zandonella and Massidda - [Git](https://arca-dpss.github.io/manual-open-science/git-chapter.html) and [Github](https://arca-dpss.github.io/manual-open-science/github-chapter.html) chapters.\n- [https://agripongit.vincenttunru.com/](https://agripongit.vincenttunru.com/)\n- [https://git-scm.com/docs/gittutorial](https://agripongit.vincenttunru.com/)\n\n# Open Science Framework {.section}\n\n## Open Science Framework\n\n> OSF is a free, open platform to support your research and enable collaboration.\n\nIs a great tool to upload and share materials with others and collaborate on a project. Similarly to Github you can track the changes made to a project.\n\nThe great addition is having a DOI thus the project is persistently online and can be cited.\n\nIt is now common practice to create a OSF project supporting a research paper and put the link within the paper containing supplementary materials, raw data, scripts etc.\n\n![](img/osf.jpeg)\n\n## Open Science Framework\n\nIt's very easy to create a new project, then you simply need to add files and share it.\n\n![](img/osf-test.png)\n\nThe project can be accessed here (depending on the visibility) [https://osf.io/yf9tg/](https://osf.io/yf9tg/).\n\n## Open Science Framework\n\n### OSF and Github\n\nAn interesting feature is linking a Github repository to OSF. Now all changes made on Github (easier to manage) are mirrored into OSF. You can easily work in Github for the coding part and use OSF to upload other data or information and to assign a DOI to the project.\n\n### Preprints\n\nOSF is also linked to a popular service for preprints called PsyArXiv [https://psyarxiv.com/](https://psyarxiv.com/) thus you can link a preprint to an OSF project.\n\n## More on OSF\n\n- https://help.osf.io/article/342-getting-started-on-the-osf\n- https://arca-dpss.github.io/manual-open-science/osf-chapter.html\n\n## More on reproducibility\n\nIn general, I highly suggest the online book **The Open Science Manual** [https://arca-dpss.github.io/manual-open-science/](https://arca-dpss.github.io/manual-open-science/) written by my friend **Claudio Zandonella** and **Davide Massidda** where these and other topics are explained in details:\n\n<center>\n\n<iframe src='https://arca-dpss.github.io/manual-open-science/' style='width:1000px; height:500px;'></iframe>\n\n</center>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}