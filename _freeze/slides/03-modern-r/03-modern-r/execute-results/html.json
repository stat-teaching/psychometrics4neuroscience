{
  "hash": "b03d5b134b370909f7890edab6ce44d9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Modern R\nincremental: true\nfrom: markdown+emoji\n---\n\n\n\n\n\n\n\n\n\n# Reproducibility starter pack {.section}\n \n## Reproducibility starter pack :construction_worker:\n\n- A general purpose (or flexible enough) [programming language]{.imp} such as <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> or <svg viewBox=\"0 0 448 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z\"></path></svg>\n- A [literate programming]{.imp} framework to integrate code and text\n- A [version control system]{.imp} to track projects\n- An [online repository]{.imp} for future-proof sharing\n\n## Disclaimers\n\n<center> **The best tool is the tool that does the job.** </center>\n\n- But there are some features that makes a tool better in terms of reproducibility, reducing the probability of errors and improve your coding skills.\n- There is nothing bad about using SPSS, Jasp or Jamovi. The real problem is that using a point-and-click software reduce the reproducibility. If you can use the scripting part, whatever the tool.\n- A general suggestion is to invest some of your time learning/improving a programming language for data pre-processing, analysis and reporting (tables, figures, etc.)\n\n# R Programming Language {.section}\n\n## R\n\n> R is a free software environment for statistical computing and graphics.\n\n- (TBH) It is not a proper general purpose programming language (such as C++ or Python).\n- R *packages* allow to do almost everything (file manager, image processing, webscraping, sending emails, coffee :smile:, etc.)\n- It is free and open-source\n- The community is wide, active thus solving problems is very easy\n- Force you to learn scripting but the are R-based GUI software (e.g., JAMOVI)\n\n## R - CRAN\n\nThe CRAN is the repository where package developers upload their packages and other users can install them.\n\n<center>\n\n\n\n::: {.cell layout-align=\"center\"}\n<iframe src=\"https://cran.r-project.org/web/packages/\" width=\"672\" height=\"400px\" data-external=\"1\"></iframe>\n:::\n\n\n\n</center>\n\n. . .\n\n> As the saying goes: if something exist, there is an R package for doing it! :smile:\n\n## R - PYPL Index\n\n\n\n::: {.cell layout-align=\"center\"}\n![Source: [https://pypl.github.io/PYPL.html](https://pypl.github.io/PYPL.html)](img/r-pypl.png){fig-align='center' width=524}\n:::\n\n\n\n## R - PYPL Index\n\nThe popularity is on a different scale compared to Python but still increasing:\n\n![Source: [https://pypl.github.io/PYPL.html](https://pypl.github.io/PYPL.html)\n](img/pypl.svg){height=500}\n\n## R or Python?\n\n- Python is a very general-purpose language more powerful for general tasks.\n- I find python very useful for programming experiments, image processing, automatizing tasks and interacting with the operating system\n- R is still a little bit superior in terms of data manipulation and visualization. Python is faster and more powerful for complex models (e.g., machine learning, etc.)\n\n## Positron\n\nSometimes Python is not so easy to setup. In addition is not as interactive as R (i.e., line by line evaluation). Posit (ex. R Studio) recently created [Positron](https://positron.posit.co/) that is a new IDE working with R and Python at the same way.\n\n![](https://positron.posit.co/images/astropy.png){fig-align=\"center\"}\n\n## Modern R\n\n- For purist programmers, R is weird: arrays starts with 1, object-oriented programming is hidden, a lot of built-in vectorized functions, etc. The [The R Inferno](https://www.burns-stat.com/pages/Tutor/R_inferno.pdf) book is really funny showing the strange R-stuff.\n- Despite the weirdness, R is widely used because it is intuitive (for non-programmers) and made for statistics and data manipulation\n- R is a language and as in spoken languages you can elegant, rude, ambiguous, funny, etc.\n- There are some tips to improve the readability and reproducibility of your code\n\n## Functional Programming\n\n> In computer science, functional programming is a programming paradigm where programs are constructed by applying and composing functions.\n\n- Despite R can be used both with an **imperative** and **object-oriented approach**, the functional side is quite powerful.\n- The basic idea is to decompose your code into small, testable and re-usable functions\n\n## Functional Programming, example...\n\nWe have a dataset (`mtcars`) and we want to calculate the mean, median, standard deviation, minimum and maximum of each column and store the result in a table.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n#> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n#> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n#> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n#> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n#> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n#> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> 'data.frame':\t32 obs. of  11 variables:\n#>  $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n#>  $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n#>  $ disp: num  160 160 108 258 360 ...\n#>  $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n#>  $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n#>  $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n#>  $ qsec: num  16.5 17 18.6 19.4 17 ...\n#>  $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n#>  $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n#>  $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n#>  $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n```\n\n\n:::\n:::\n\n\n\n## Functional Programming\n\nThe standard (~imperative) option is using a `for` loop, iterating through columns, calculate the values and store into another data structure.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nncols <- ncol(mtcars)\nmeans <- medians <- mins <- maxs <- rep(0, ncols)\n\nfor(i in 1:ncols){\n  means[i] <- mean(mtcars[[i]])\n  medians[i] <- median(mtcars[[i]])\n  mins[i] <- min(mtcars[[i]])\n  maxs[i] <- max(mtcars[[i]])\n}\n\nresults <- data.frame(means, medians, mins, maxs)\nresults$col <- names(mtcars)\n\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>         means medians   mins    maxs  col\n#> 1   20.090625  19.200 10.400  33.900  mpg\n#> 2    6.187500   6.000  4.000   8.000  cyl\n#> 3  230.721875 196.300 71.100 472.000 disp\n#> 4  146.687500 123.000 52.000 335.000   hp\n#> 5    3.596563   3.695  2.760   4.930 drat\n#> 6    3.217250   3.325  1.513   5.424   wt\n#> 7   17.848750  17.710 14.500  22.900 qsec\n#> 8    0.437500   0.000  0.000   1.000   vs\n#> 9    0.406250   0.000  0.000   1.000   am\n#> 10   3.687500   4.000  3.000   5.000 gear\n#> 11   2.812500   2.000  1.000   8.000 carb\n```\n\n\n:::\n:::\n\n\n\n## Functional Programming\n\nThe main idea is to decompose the problem writing a function and loop over the columns of the dataframe:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsumm <- function(x){\n  data.frame(means = mean(x), \n             medians = median(x), \n             mins = min(x), \n             maxs = max(x))\n}\nncols <- ncol(mtcars)\ndfs <- vector(mode = \"list\", length = ncols)\n\nfor(i in 1:ncols){\n  dfs[[i]] <- summ(mtcars[[i]])\n}\n```\n:::\n\n\n\n## Functional Programming\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresults <- do.call(rbind, dfs)\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>         means medians   mins    maxs\n#> 1   20.090625  19.200 10.400  33.900\n#> 2    6.187500   6.000  4.000   8.000\n#> 3  230.721875 196.300 71.100 472.000\n#> 4  146.687500 123.000 52.000 335.000\n#> 5    3.596563   3.695  2.760   4.930\n#> 6    3.217250   3.325  1.513   5.424\n#> 7   17.848750  17.710 14.500  22.900\n#> 8    0.437500   0.000  0.000   1.000\n#> 9    0.406250   0.000  0.000   1.000\n#> 10   3.687500   4.000  3.000   5.000\n#> 11   2.812500   2.000  1.000   8.000\n```\n\n\n:::\n:::\n\n\n\n## Functional Programming\n\nThe actual real functional way require using the built-in iteration tools `*apply`. In this way you avoid writing the verbose `for` loop.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresults <- lapply(mtcars, summ)\nresults <- do.call(rbind, results)\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>           means medians   mins    maxs\n#> mpg   20.090625  19.200 10.400  33.900\n#> cyl    6.187500   6.000  4.000   8.000\n#> disp 230.721875 196.300 71.100 472.000\n#> hp   146.687500 123.000 52.000 335.000\n#> drat   3.596563   3.695  2.760   4.930\n#> wt     3.217250   3.325  1.513   5.424\n#> qsec  17.848750  17.710 14.500  22.900\n#> vs     0.437500   0.000  0.000   1.000\n#> am     0.406250   0.000  0.000   1.000\n#> gear   3.687500   4.000  3.000   5.000\n#> carb   2.812500   2.000  1.000   8.000\n```\n\n\n:::\n:::\n\n\n\n## Functional Programming, `*apply`\n\n- The `*apply` family is one of the best tool in R. The idea is pretty simple: apply a function to each element of a list. \n- The powerful side is that in R everything can be considered as a list. A vector is a list of single elements, a dataframe is a list of columns etc.\n- Internally, R is still using a `for` loop but the verbose part (preallocation, choosing the iterator, indexing) is encapsulated into the `*apply` function.\n\n. . .\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmeans <- rep(0, ncol(mtcars))\nfor(i in 1:length(means)){\n  means[i] <- mean(mtcars[[i]])\n}\n\n# the same with sapply\nmeans <- sapply(mtcars, mean)\n```\n:::\n\n\n\n## `for` loops are bad?\n\n`for` loops are the core of each operation in R (and in every programming language). For complex operation thery are more readable and effective compared to `*apply`. In R we need extra care for writing efficent `for` loops.\n\nExtremely slow, no preallocation:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nres <- c()\nfor(i in 1:1000){\n  # do something\n  res[i] <- x\n}\n```\n:::\n\n\n\nVery fast, no difference compared to `*apply`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n## With `*apply` you can do crazy stuff!\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfuns <- list(mean = mean, sd = sd, min = min, max = max, median = median)\nsapply(funs, function(f) lapply(mtcars, function(x) f(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      mean     sd        min   max   median\n#> mpg  20.09062 6.026948  10.4  33.9  19.2  \n#> cyl  6.1875   1.785922  4     8     6     \n#> disp 230.7219 123.9387  71.1  472   196.3 \n#> hp   146.6875 68.56287  52    335   123   \n#> drat 3.596563 0.5346787 2.76  4.93  3.695 \n#> wt   3.21725  0.9784574 1.513 5.424 3.325 \n#> qsec 17.84875 1.786943  14.5  22.9  17.71 \n#> vs   0.4375   0.5040161 0     1     0     \n#> am   0.40625  0.4989909 0     1     0     \n#> gear 3.6875   0.7378041 3     5     4     \n#> carb 2.8125   1.6152    1     8     2\n```\n\n\n:::\n:::\n\n\n\n\n## Why functional programming?\n\n- We can write less and reusable code that can be shared and used in multiple projects\n- The scripts are more compact, easy to modify and less error prone (imagine that you want to improve the `summ` function, you only need to change it once instead of touching the `for` loop)\n- Functions can be easily and consistently documented (see [roxygen](https://cran.r-project.org/web/packages/roxygen2/vignettes/roxygen2.html) documentation) improving the reproducibility and readability of your code\n\n## More about functional programming in R\n\n- Advanced R by Hadley Wickham, section on Functional Programming ([https://adv-r.hadley.nz/fp.html](https://adv-r.hadley.nz/fp.html))\n- Hands-On Programming with R by Garrett Grolemund [https://rstudio-education.github.io/hopr/](https://rstudio-education.github.io/hopr/)\n- Hadley Wickham: [The Joy of Functional Programming (for Data Science)](https://www.youtube.com/watch?v=bzUmK0Y07ck)\n- [Bruno Rodrigues Youtube Channel](https://www.youtube.com/@brodriguesco/videos)\n\n. . .\n\n<center>\n\n::: {layout-ncol=2}\n![Advanced R](img/advanced-r.jpg){width=200 fig-align=\"center\"}\n![Hands-on Programming With R](img/hand-on-programming.jpeg){width=200 fig-align=\"center\"}\n:::\n\n</center>\n\n## A more advanced approach, R packages\n\nR packages are not only on CRAN. You can (pretty) easily create a package and put it on Github. For example, if you keep using some functions in your project, write a general version and put them into a package.\n\n![[github.com/filippogambarota/filor](https://github.com/filippogambarota/filor)](img/filor.png)\n\n## A more advanced approach, R packages\n\nIf your functions are project-specific you can define them into your scripts or write some R scripts only with functions and `source()` them into the global environment.\n\n```\nproject/\n├─ R/\n│  ├─ utils.R\n├─ analysis.R\n```\n\nAnd inside `utils.R` you have some functions:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmyfun <- function(x) {\n  # something\n}\n```\n:::\n\n\n\nThen you can load the function using `source(\"R/utils.R)` at the beginning of `analysis.R`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsource(\"R/utils.R\")\n```\n:::\n\n\n\n## Analysis project as R package\n\nThe R project structure is really interesting to organize a data analysis pipeline. In fact, you can use the project structure. @Vuorre2021-dr and @Marwick2018-zm describe in details the idea.\n\nThe general approach is:\n\n1. Create an R Studio project `.Rproj` file\n2. Create your directories, put scripts, data, etc.\n3. Create an `R/` folder and put your scripts with functions\n4. Create a `DESCRIPTION` file using `usethis::use_description(check_name = FALSE)`\n5. Then you can load your functions without source and with `devtools::load_all()` (same as `library()`)\n\n# Let's see an example!\n\n## The Tidy approach\n\nThe `tidyverse` is a series of high-quality R packages to do modern data science:\n\n::: {.nonincremental}\n- data manipulation (`dplyr`, `tidyr`)\n- plotting (`ggplot2`)\n- reporting (`rmarkdown`)\n- string manipulation (`stringr`)\n- functionals (`purrr`)\n- ...\n:::\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/SVG/tidyverse.svg){fig-align=\"center\" width=400}\n\n## The Tidy approach - Pipes\n\nOne of the great improvement from the `tidyverse` is the usage of the pipe `%>%` now introduced in base R as `|>`. You will se these symbols a lot when looking at modern R code.\n\n. . .\n\nThe idea is very simple, the standard pattern to apply a function is `function(argument)`. The pipe can reverse the pattern as `argument |> function()`. Normally when we apply multiple functions progressively the pattern is this:\n\n. . .\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- rnorm(100)\nx <- round(x, 3)\nx <- abs(x)\nx <- as.character(x)\n```\n:::\n\n\n\n## The Tidy approach - Pipes\n\nWhen using the pipe, we remove the redundand assignment `<-` pattern:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- rnorm(100)\nx |>\n  round(3) |>\n  abs() |>\n  as.character()\n```\n:::\n\n\n\nThe pipe can be read as *\"from **x** apply `round`, then `abs`, etc.\".* The first argument of the piped function is assumed to be the result of the previus call.\n\n## More about the Tidy approach\n\nThe `tidy` approach contains tons of functions and packages. The overall philosophy can be deepen in the R for Data Science book.\n\n![[https://r4ds.hadley.nz/](https://r4ds.hadley.nz/)](img/r4ds.jpg)\n\n## ggplot2\n\nOnly an quick mention to `ggplot2` [https://ggplot2-book.org/](https://ggplot2-book.org/) (part of the `tidyverse`) that is an amazing package for data visualization following the *piping* and *tidy* approach. Is the implementation of the **grammar of graphics** idea.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\niris |>\n  mutate(wi = runif(n())) |>\n  ggplot(aes(x = Sepal.Length, y = Petal.Width, color = Species)) +\n  geom_point(aes(size = wi)) +\n  geom_smooth(method = \"lm\", se = FALSE)\n  guides(size = \"none\") +\n  theme_minimal(15)\n```\n:::\n\n\n\n## ggplot2\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-modern-r_files/figure-revealjs/unnamed-chunk-20-1.svg){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Base R version\n\nMore verbose, more hard coding, more steps and intermediate objects.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\niris_l <- split(iris, iris$Species)\nlms <- lapply(iris_l, function(x) lm(Petal.Width ~ Sepal.Length, data = x))\n\nplot(iris$Sepal.Length, \n     iris$Petal.Width, \n     col = as.numeric(iris$Species), pch = 19)\n\nabline(lms[[1]], col = 1, lwd = 2)\nabline(lms[[2]], col = 2, lwd = 2)\nabline(lms[[3]], col = 3, lwd = 2)\n\nlegend(\"topleft\", legend = levels(iris$Species), fill = 1:3)\n```\n:::\n\n\n\n## Base R version\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-modern-r_files/figure-revealjs/unnamed-chunk-22-1.svg){fig-align='center' width=672}\n:::\n:::\n\n\n\n## More on ggplot2\n\nThe `ggplot2` book [https://ggplot2-book.org/](https://ggplot2-book.org/) is a great resource to produce high-quality, publication ready plots. Clearly, the advantage of producing the figures entirely writing code are immense in terms of reusability and reproducibility.\n\n::: {layout-ncol=2}\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/SVG/ggplot2.svg){width=300 fig-align=\"center\"}\n\n![](img/ggplot2.jpg){width=300 fig-align=\"center\"}\n:::\n\n## Something crazy in the `tidyverse`\n\nWithout going into details, I want to show you a very interesting approach that you can do with the `tidyverse` functions.\n\nLet's assume you want to do a leave-one-out analysis thus fitting the same models on a dataset, removing one observation at time.\n\nYou can do it in base R with a loop or other methods, but the see so-called *many-models* approach. See [https://r4ds.had.co.nz/many-models.html](https://r4ds.had.co.nz/many-models.html) and [https://www.youtube.com/watch?v=rz3_FDVt9eg](https://www.youtube.com/watch?v=rz3_FDVt9eg).\n\n## Something crazy in the `tidyverse`\n\nLet's define some functions:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nleave1out <- function(data){\n  idx <- 1:nrow(data)\n  ll <- lapply(idx, function(i) data[-i, ])\n  names(ll) <- paste0(\"no\", idx)\n  c(no0 = list(data), ll)\n}\n\nfit_model <- function(data){\n  lm(Sepal.Length ~ Petal.Width, data = data)\n}\n```\n:::\n\n\n\n## Something crazy in the `tidyverse`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- tibble(data = leave1out(iris[1:20, ]))\ndat |> \n  mutate(removed = names(data)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 6 × 2\n#>   data          removed\n#>   <named list>  <chr>  \n#> 1 <df [20 × 5]> no0    \n#> 2 <df [19 × 5]> no1    \n#> 3 <df [19 × 5]> no2    \n#> 4 <df [19 × 5]> no3    \n#> 5 <df [19 × 5]> no4    \n#> 6 <df [19 × 5]> no5\n```\n\n\n:::\n:::\n\n\n\n## Something crazy in the `tidyverse`\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 6 × 4\n#>   data          removed fit          results         \n#>   <named list>  <chr>   <named list> <named list>    \n#> 1 <df [20 × 5]> no0     <lm>         <tibble [2 × 5]>\n#> 2 <df [19 × 5]> no1     <lm>         <tibble [2 × 5]>\n#> 3 <df [19 × 5]> no2     <lm>         <tibble [2 × 5]>\n#> 4 <df [19 × 5]> no3     <lm>         <tibble [2 × 5]>\n#> 5 <df [19 × 5]> no4     <lm>         <tibble [2 × 5]>\n#> 6 <df [19 × 5]> no5     <lm>         <tibble [2 × 5]>\n```\n\n\n:::\n:::\n\n\n\n## Something crazy in the `tidyverse`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat |> \n  mutate(removed = names(data)) |> \n  mutate(fit = map(data, fit_model),\n         results = map(fit, broom::tidy)) |> \n  unnest(results) |> \n  ggplot(aes(x = removed, y = estimate)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~term, scales = \"free\")\n```\n:::\n\n\n\n## Something crazy in the `tidyverse`\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-modern-r_files/figure-revealjs/unnamed-chunk-27-1.svg){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Quick tables\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"oofwdgromh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#oofwdgromh table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#oofwdgromh thead, #oofwdgromh tbody, #oofwdgromh tfoot, #oofwdgromh tr, #oofwdgromh td, #oofwdgromh th {\n  border-style: none;\n}\n\n#oofwdgromh p {\n  margin: 0;\n  padding: 0;\n}\n\n#oofwdgromh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#oofwdgromh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#oofwdgromh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#oofwdgromh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#oofwdgromh .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#oofwdgromh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#oofwdgromh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#oofwdgromh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#oofwdgromh .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#oofwdgromh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#oofwdgromh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#oofwdgromh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#oofwdgromh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#oofwdgromh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#oofwdgromh .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#oofwdgromh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#oofwdgromh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#oofwdgromh .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#oofwdgromh .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#oofwdgromh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#oofwdgromh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#oofwdgromh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#oofwdgromh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#oofwdgromh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#oofwdgromh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#oofwdgromh .gt_left {\n  text-align: left;\n}\n\n#oofwdgromh .gt_center {\n  text-align: center;\n}\n\n#oofwdgromh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#oofwdgromh .gt_font_normal {\n  font-weight: normal;\n}\n\n#oofwdgromh .gt_font_bold {\n  font-weight: bold;\n}\n\n#oofwdgromh .gt_font_italic {\n  font-style: italic;\n}\n\n#oofwdgromh .gt_super {\n  font-size: 65%;\n}\n\n#oofwdgromh .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#oofwdgromh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#oofwdgromh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#oofwdgromh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#oofwdgromh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#oofwdgromh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#oofwdgromh .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 150&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 150</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Sepal.Length</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">5.80 (5.10, 6.40)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Sepal.Width</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3.00 (2.80, 3.30)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Petal.Length</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">4.35 (1.60, 5.10)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Petal.Width</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1.30 (0.30, 1.80)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Species</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    setosa</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">50 (33%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    versicolor</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">50 (33%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    virginica</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">50 (33%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> Median (IQR); n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Quick tables from models\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfit <- lm(Sepal.Length ~ Petal.Width, data = iris)\nsjPlot::tab_model(fit)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"border-collapse:collapse; border:none;\">\n<tr>\n<th style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm;  text-align:left; \">&nbsp;</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">Sepal.Length</th>\n</tr>\n<tr>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  text-align:left; \">Predictors</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">Estimates</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">p</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">(Intercept)</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">4.78</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">4.63&nbsp;&ndash;&nbsp;4.92</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</strong></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">Petal Width</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">0.89</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">0.79&nbsp;&ndash;&nbsp;0.99</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</strong></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm; border-top:1px solid;\">Observations</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">150</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">R<sup>2</sup> / R<sup>2</sup> adjusted</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.669 / 0.667</td>\n</tr>\n\n</table>\n\n`````\n:::\n:::\n\n\n\n## Quick tables from models\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngtsummary::tbl_regression(fit)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"tddsvxscxv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tddsvxscxv table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tddsvxscxv thead, #tddsvxscxv tbody, #tddsvxscxv tfoot, #tddsvxscxv tr, #tddsvxscxv td, #tddsvxscxv th {\n  border-style: none;\n}\n\n#tddsvxscxv p {\n  margin: 0;\n  padding: 0;\n}\n\n#tddsvxscxv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tddsvxscxv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tddsvxscxv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tddsvxscxv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tddsvxscxv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tddsvxscxv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tddsvxscxv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tddsvxscxv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tddsvxscxv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tddsvxscxv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tddsvxscxv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tddsvxscxv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tddsvxscxv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tddsvxscxv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tddsvxscxv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tddsvxscxv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tddsvxscxv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tddsvxscxv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tddsvxscxv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tddsvxscxv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tddsvxscxv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tddsvxscxv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tddsvxscxv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tddsvxscxv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tddsvxscxv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tddsvxscxv .gt_left {\n  text-align: left;\n}\n\n#tddsvxscxv .gt_center {\n  text-align: center;\n}\n\n#tddsvxscxv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tddsvxscxv .gt_font_normal {\n  font-weight: normal;\n}\n\n#tddsvxscxv .gt_font_bold {\n  font-weight: bold;\n}\n\n#tddsvxscxv .gt_font_italic {\n  font-style: italic;\n}\n\n#tddsvxscxv .gt_super {\n  font-size: 65%;\n}\n\n#tddsvxscxv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tddsvxscxv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tddsvxscxv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tddsvxscxv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tddsvxscxv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tddsvxscxv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tddsvxscxv .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Beta&lt;/strong&gt;\"><strong>Beta</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;95% CI&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>95% CI</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;p-value&lt;/strong&gt;\"><strong>p-value</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Petal.Width</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.89</td>\n<td headers=\"ci\" class=\"gt_row gt_center\">0.79, 0.99</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><0.001</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> CI = Confidence Interval</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## References {.refs}\n\n",
    "supporting": [
      "03-modern-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}