{
  "hash": "f91676beda6627e5de63922a5d83e711",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03 - Data Transformation\"\nbook: R4DS\nlink: \"[https://r4ds.hadley.nz/data-transform.html](https://r4ds.hadley.nz/data-transform.html)\"\nengine: knitr\n---\n\n\n\n## Introduction\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(nycflights13)\nflights <- nycflights13::flights\n```\n:::\n\n\n\n## Selecting Columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% select(year, month, day, dep_delay, arr_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n    year month   day dep_delay arr_delay\n   <int> <int> <int>     <dbl>     <dbl>\n 1  2013     1     1         2        11\n 2  2013     1     1         4        20\n 3  2013     1     1         2        33\n 4  2013     1     1        -1       -18\n 5  2013     1     1        -6       -25\n 6  2013     1     1        -4        12\n 7  2013     1     1        -5        19\n 8  2013     1     1        -3       -14\n 9  2013     1     1        -3        -8\n10  2013     1     1        -2         8\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n## Filtering Rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% filter(month == 1, day == 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay <dbl>, carrier <chr>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n## Arranging Rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% arrange(desc(dep_delay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay <dbl>, carrier <chr>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n## Creating New Variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% mutate(speed = distance / air_time * 60)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 12 more variables: arr_delay <dbl>, carrier <chr>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>, speed <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Renaming Columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% rename(departure_delay = dep_delay, arrival_delay = arr_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time departure_delay arr_time\n   <int> <int> <int>    <int>          <int>           <dbl>    <int>\n 1  2013     1     1      517            515               2      830\n 2  2013     1     1      533            529               4      850\n 3  2013     1     1      542            540               2      923\n 4  2013     1     1      544            545              -1     1004\n 5  2013     1     1      554            600              -6      812\n 6  2013     1     1      554            558              -4      740\n 7  2013     1     1      555            600              -5      913\n 8  2013     1     1      557            600              -3      709\n 9  2013     1     1      557            600              -3      838\n10  2013     1     1      558            600              -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time <int>, arrival_delay <dbl>,\n#   carrier <chr>, flight <int>, tailnum <chr>, origin <chr>, dest <chr>,\n#   air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n## Relocating Columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% relocate(dep_delay, arr_delay, .before = distance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time arr_time sched_arr_time carrier\n   <int> <int> <int>    <int>          <int>    <int>          <int> <chr>  \n 1  2013     1     1      517            515      830            819 UA     \n 2  2013     1     1      533            529      850            830 UA     \n 3  2013     1     1      542            540      923            850 AA     \n 4  2013     1     1      544            545     1004           1022 B6     \n 5  2013     1     1      554            600      812            837 DL     \n 6  2013     1     1      554            558      740            728 UA     \n 7  2013     1     1      555            600      913            854 B6     \n 8  2013     1     1      557            600      709            723 EV     \n 9  2013     1     1      557            600      838            846 B6     \n10  2013     1     1      558            600      753            745 AA     \n# ℹ 336,766 more rows\n# ℹ 11 more variables: flight <int>, tailnum <chr>, origin <chr>, dest <chr>,\n#   air_time <dbl>, dep_delay <dbl>, arr_delay <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n## Summarizing Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% group_by(carrier) %>% summarize(avg_delay = mean(dep_delay, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   carrier avg_delay\n   <chr>       <dbl>\n 1 9E          16.7 \n 2 AA           8.59\n 3 AS           5.80\n 4 B6          13.0 \n 5 DL           9.26\n 6 EV          20.0 \n 7 F9          20.2 \n 8 FL          18.7 \n 9 HA           4.90\n10 MQ          10.6 \n11 OO          12.6 \n12 UA          12.1 \n13 US           3.78\n14 VX          12.9 \n15 WN          17.7 \n16 YV          19.0 \n```\n\n\n:::\n:::\n\n\n\n## Counting Observations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% count(carrier)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   carrier     n\n   <chr>   <int>\n 1 9E      18460\n 2 AA      32729\n 3 AS        714\n 4 B6      54635\n 5 DL      48110\n 6 EV      54173\n 7 F9        685\n 8 FL       3260\n 9 HA        342\n10 MQ      26397\n11 OO         32\n12 UA      58665\n13 US      20536\n14 VX       5162\n15 WN      12275\n16 YV        601\n```\n\n\n:::\n:::\n\n\n\n## Using Pipes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% \n  filter(month == 1, day == 1) %>% \n  select(year, month, day, carrier, flight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 842 × 5\n    year month   day carrier flight\n   <int> <int> <int> <chr>    <int>\n 1  2013     1     1 UA        1545\n 2  2013     1     1 UA        1714\n 3  2013     1     1 AA        1141\n 4  2013     1     1 B6         725\n 5  2013     1     1 DL         461\n 6  2013     1     1 UA        1696\n 7  2013     1     1 B6         507\n 8  2013     1     1 EV        5708\n 9  2013     1     1 B6          79\n10  2013     1     1 AA         301\n# ℹ 832 more rows\n```\n\n\n:::\n:::\n\n\n\n## Combining Multiple Transformations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% \n  group_by(carrier) %>% \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) %>% \n  arrange(desc(avg_delay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   carrier avg_delay\n   <chr>       <dbl>\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78\n```\n\n\n:::\n:::\n\n\n\n## Conclusion\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(flights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      year          month             day           dep_time    sched_dep_time\n Min.   :2013   Min.   : 1.000   Min.   : 1.00   Min.   :   1   Min.   : 106  \n 1st Qu.:2013   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 907   1st Qu.: 906  \n Median :2013   Median : 7.000   Median :16.00   Median :1401   Median :1359  \n Mean   :2013   Mean   : 6.549   Mean   :15.71   Mean   :1349   Mean   :1344  \n 3rd Qu.:2013   3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.:1744   3rd Qu.:1729  \n Max.   :2013   Max.   :12.000   Max.   :31.00   Max.   :2400   Max.   :2359  \n                                                 NA's   :8255                 \n   dep_delay          arr_time    sched_arr_time   arr_delay       \n Min.   : -43.00   Min.   :   1   Min.   :   1   Min.   : -86.000  \n 1st Qu.:  -5.00   1st Qu.:1104   1st Qu.:1124   1st Qu.: -17.000  \n Median :  -2.00   Median :1535   Median :1556   Median :  -5.000  \n Mean   :  12.64   Mean   :1502   Mean   :1536   Mean   :   6.895  \n 3rd Qu.:  11.00   3rd Qu.:1940   3rd Qu.:1945   3rd Qu.:  14.000  \n Max.   :1301.00   Max.   :2400   Max.   :2359   Max.   :1272.000  \n NA's   :8255      NA's   :8713                  NA's   :9430      \n   carrier              flight       tailnum             origin         \n Length:336776      Min.   :   1   Length:336776      Length:336776     \n Class :character   1st Qu.: 553   Class :character   Class :character  \n Mode  :character   Median :1496   Mode  :character   Mode  :character  \n                    Mean   :1972                                        \n                    3rd Qu.:3465                                        \n                    Max.   :8500                                        \n                                                                        \n     dest              air_time        distance         hour      \n Length:336776      Min.   : 20.0   Min.   :  17   Min.   : 1.00  \n Class :character   1st Qu.: 82.0   1st Qu.: 502   1st Qu.: 9.00  \n Mode  :character   Median :129.0   Median : 872   Median :13.00  \n                    Mean   :150.7   Mean   :1040   Mean   :13.18  \n                    3rd Qu.:192.0   3rd Qu.:1389   3rd Qu.:17.00  \n                    Max.   :695.0   Max.   :4983   Max.   :23.00  \n                    NA's   :9430                                  \n     minute        time_hour                     \n Min.   : 0.00   Min.   :2013-01-01 05:00:00.00  \n 1st Qu.: 8.00   1st Qu.:2013-04-04 13:00:00.00  \n Median :29.00   Median :2013-07-03 10:00:00.00  \n Mean   :26.23   Mean   :2013-07-03 05:22:54.64  \n 3rd Qu.:44.00   3rd Qu.:2013-10-01 07:00:00.00  \n Max.   :59.00   Max.   :2013-12-31 23:00:00.00  \n                                                 \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}