{
  "hash": "dd86da865ef5998cf6f67fc1ef1db986",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 2025-03-28\n---\n\n\n\n\n## Face processing\n\n@Shimizu2024-xl analyzed the impact of the type and intensity of the facial expression on the detection accuracy.\n\n> This study examined the relationship between the intensity of emotional expressions in facial stimuli and receivers' decoding accuracy for six basic emotions: anger, disgust, fear, happiness, sadness, and surprise. A laboratory experiment was conducted using the forced‐choice method, in which the intensity of each stimulus was manipulated at every 10% interval using the morphing technique. To explore whether a linear relationship would be observed when the intensity was finely manipulated at 10% intervals, a hierarchical multiple regression analysis was performed. The mean percentage of correct responses for each stimulus was the dependent variable, and the linear, quadratic, and cubic terms of the stimulus intensity were the independent variables. The results showed that the linear model was not adopted as the final model for all facial expressions; that is, the effect of the squared term of intensity was significant for anger, disgust, fear, and sadness, while the effect of the cubic term of intensity was significant for happiness and surprise. Our findings indicate that a higher intensity of emotional expression does not yield higher decoding accuracy.\n\nData are available on [OSF](https://osf.io/zhtbj/)\n\nScript di pre-processing:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lme4)\nlibrary(here)\n\n# https://osf.io/zhtbj/?view_only=\n# download.file(\"https://osf.io/download/tph5f/\", \"data-raw/emoint.csv\")\n\ndat <- read.csv(here(\"data-raw/emoint.csv\"))\n\n# conversion for responses\n# 1 = neutral\n# 2 = anger\n# 3 = disgust\n# 4 = fear\n# 5 = happiness\n# 6 = sadness\n# 7 = surprise\n\nresp_code <- c(\n  \"1\" = \"neutral\",\n  \"2\" = \"anger\",\n  \"3\" = \"disgust\",\n  \"4\" = \"fear\",\n  \"5\" = \"happiness\",\n  \"6\" = \"sadness\",\n  \"7\" = \"suprise\"\n)\n\nemotion_code <- c(\n  \"fear\" = \"fear\",\n  \"disop\" = \"disgust\",\n  \"discl\" = \"disgust\",\n  \"hap\" = \"happiness\",\n  \"sad\" = \"sadness\",\n  \"sur\" = \"suprise\",\n  \"angcl\" = \"anger\",\n  \"neutral\" = \"neutral\"\n)\n\ndat_clean <- dat |> \n  pivot_longer(4:ncol(dat), values_to = \"response\") |> \n  separate(name, into = c(\"face\", \"emotion\", \"intensity\"), sep = \"_\")  |>\n  # intensity as number\n  mutate(intensity = as.numeric(intensity)) |> \n  # neutral as maximal intensity, avoid NA\n  mutate(intensity = ifelse(emotion == \"neutral\", 100, intensity))\n\nnames(dat_clean)[1:3] <- c(\"id\", \"gender\", \"age\")\n\n# recoding response with labels\n# see https://adv-r.hadley.nz/subsetting.html?q=look#lookup-tables\n\ndat_clean$response_lbl <- resp_code[dat_clean$response]\n\n# recoding the displayed emotion as the response\n\ndat_clean$emotion_lbl <- emotion_code[dat_clean$emotion]\n\n# binary accuracy if emotion_lbl == response_lbl\n\ndat_clean$acc <- as.integer(dat_clean$response_lbl == dat_clean$emotion_lbl)\n\nhead(dat_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n     id gender age   face  emotion intensity response response_lbl emotion_lbl\n  <int> <chr>  <chr> <chr> <chr>       <dbl>    <int> <chr>        <chr>      \n1     1 f      32    f1    fear           60        4 fear         fear       \n2     1 f      32    m3    disop          60        3 disgust      disgust    \n3     1 f      32    m3    hap            70        5 happiness    happiness  \n4     1 f      32    m1    hap           100        5 happiness    happiness  \n5     1 f      32    m4    disop          60        6 sadness      disgust    \n6     1 f      32    m1    fear           20        1 neutral      fear       \n# ℹ 1 more variable: acc <int>\n```\n\n\n:::\n\n```{.r .cell-code}\nsaveRDS(dat_clean, here(\"data/emoint.rds\"))\n```\n:::\n",
    "supporting": [
      "2025-03-28_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}